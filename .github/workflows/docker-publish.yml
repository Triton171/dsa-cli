name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
#    branches:
#      - master
  # Run tests for any PRs.
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      -
       name: Checkout
       uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          image_name: dsa-cli/discord
          image_tag: master
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"
          push_image_and_stages: false
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # -
      #   name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-
      # -
      #   name: Docker meta
      #   id: meta
      #   uses: crazy-max/ghaction-docker-meta@v2
      #   with:
      #     images: dsacli/discord
      # -
      #   name: Login to DockerHub
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new
      # -
      #   name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy_webhook:
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - name: Webhook
      if: "${{ github.event_name == 'push' }}"
      uses: fjogeleit/http-request-action@master
      with:
        url: "${{ secrets.WEBHOOK_URL }}"
        method: 'POST'
        data: '{"secret":"${{ secrets.WEBHOOK_SECRET }}"}'